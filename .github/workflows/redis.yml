name: Redis container example
on: push

jobs:
  # Label of the container job
  container-job:
    # This is a host machine(i.e., runner) that runs the container job. Containers must run in Linux based operating systems with Docker installed. 
    runs-on: ubuntu-latest
    # This indicates a Docker Hub image that `container-job` executes in. 
    container: node:20.14.0-alpine3.20

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v4

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm install

      - name: Connect to Redis
        # Invokes the custom action instead of running the 'node' command
        uses: ./
        # Environment variable used by the `client.js` script to create a new Redis client.
         
        env:
          # The hostname used to communicate with the Redis service container
          REDIS_HOST: redis
          # The default Redis port
          REDIS_PORT: 6379


  non-container-job:
    # This is a host machine(i.e., runner) that runs the container job. Containers must run in Linux based operating systems with Docker installed. 
    runs-on: ubuntu-latest

    # Service containers to run within the runner
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        ports: 
          - 6379:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v4

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        run: npm install

      - name: Connect to Redis
        # Invokes the custom action instead of running the 'node' command
        uses: ./
        # Environment variable used by the `client.js` script to create a new Redis client.
         
        env:
          # The hostname used to communicate with the Redis service container
          # The hostname used to communicate with the Redis service container
          # If the job is run within a container, the value must be the label of the service container.
          # Otherwise, the value should be 127.0.0.1.
          REDIS_HOST: 127.0.0.1
          # The default Redis port
          REDIS_PORT: 6379